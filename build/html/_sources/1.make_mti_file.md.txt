# Make `.mti` File

The `.mti` format is the file format used by **Motsi** to store time-series data. The first line is the Motsi header line, and the second line is the Title.

The columns include base columns that record positional information and value columns that record time-series data information.

Creating an `.mti` format file is the first step in using **Motsi**, as it serves as the input file for other **Motsi** analysis functions.

**Motsi** can conveniently generate `.mti` format files for various types of omics data, including transcriptome data (e.g., RNA-seq), epigenome data (e.g., Histone ChIP-seq), transcription factor data (e.g., TF ChIP-seq), and 3D epigenome data (e.g., Hi-C - ChIP-seq).

Next, I will guide you through a Quick Start to help you quickly master the usage of these functions:



### mtiRNA

`mtiRNA` is a method provided by **Motsi** for generating `.mti` files from RNA-seq data. It is developed based on **Kallisto**, uses fastq files as input, and can quickly calculate the TPM values of target genes without requiring time-consuming alignment.

Before using `mtiRNA`, **Kallisto** needs to be installed. We recommend using **conda** for a quick setup:

```shell
conda install kallisto
```

Then you can use `mtiRNA` through：

```shell
 motsi.py mtiRNA [-h] -f FASTQ [FASTQ ...] -g GENE -i INDEX -gtf GTF [-f2 FASTQ [FASTQ ...]]
                       [-s SAMPLE [SAMPLE ...]] [-t THREAD] [--norm_type {agmn,tpm}] [-p PREFIX]
```

required arguments:

-   `-f`: List of input .fastq files. For paired-end data, provide _1 file here
-   `-g`: Gene bed6 file.
-   `-i`: Kallisto index file. 

​		-- You can make it by `$ kallisto index`.

-   `-gtf` : `.gtf` file. Here is some example to show you how to download it:

​	-- hg38: `wget -c https://ftp.ensembl.org/pub/release-109/gtf/homo_sapiens/Homo_sapiens.GRCh38.109.gtf.gz`

​	-- hg19: `wget -c ftp://ftp.ensembl.org/pub/release-75/gtf/homo_sapiens/Homo_sapiens.GRCh37.75.gtf.gz`

options:

-   `-f2`:  List of input _2 .fastq files. Only usable for pair-end sequencing data. (Default: None)
-   `-s`: List of sample names. (Default: T1,T2,...)
-   `-t` : Number of threads. (Default: 1)
-   `--norm_type` : Normalization type.  (Default: tpm).  `agmn` for all gene median normalization
-   `-p`: Prefix for output file. (Default: MotsiRNAResults)



### mtiEpi

`mtiEpi` can generate `.mti` files from aligned epigenetics data as input. We recommend using `.bigWig`format, as it is the fastest input format for processing. Additionally, `.bam `and `.bedGraph` files are also supported as input.

`mtiEpi` is developed based on **Tichr**, so before using it, please ensure that **bedtools** (a prerequisite for **Tichr**) is available in your environment. If you haven't installed **bedtools** yet, you can quickly install it via **conda** using the following command:

```shell
conda install -c bioconda bedtools
```

Then you can use `mtiEpi` through：

```shell
motsi.py mtiEpi [-h] -f FILE [FILE ...] -gt GENOME_TABLE -g GENE [-s SAMPLE [SAMPLE ...]] [-p PREFIX]
                       [--norm_type {no_norm,agmn,spmr}] [--file_type {bw,bedg,bam}] [-max_distance MAXDISTANCE]
```

required arguments:

-   `-f` : List of input files.
-   `-gt` : Genome table file. Records chromosome length.
-   `-g`: Gene bed6 file.

options:

-   `-s`: List of sample names. (Default: T1,T2,...)
-   `-p`: Prefix for output file. (Default: MotsiEpiResults)
-   `--norm_type`:  Normalization type. {no_norm,agmn,spmr} (Default: agmn)
-   `--file_type`: File type for input files. {bw,bedg,bam}  (Default: bw)
-   `-max_distance`: Max distance from site to gene TSS. For a given gene, epigenetic signals beyond this distance will not be considered.(Default: 10000)



### mtiTf

`mtiTf` is a function designed for transcription factor analysis. It takes transcription factor ChIP-seq/Cut&Tag data as input to generate `.mti` files. Due to the diverse binding sites of transcription factors, `mtiTf` requires an additional candidate_site file in bed3 format that records potential TF binding sites, unlike `mtiEpi`.

The usage of mtiTf is as follows:

```shell
 motsi.py mtiTf [-h] -f FILE [FILE ...] -gt GENOME_TABLE -c CANDIDATE_SITE [-s SAMPLE [SAMPLE ...]]
                      [-p PREFIX] [--norm_type {no_norm,agmn,spmr}] [--file_type {bw,bedg,bam}]
```

required arguments:

-   `-f` : List of input files.
-   `-gt` : Genome table file. Records chromosome length.
-   `-g`: Gene bed6 file.
-   `-c`： Candidate site file -- a file in BED3 format that records potential transcription factor binding sites.

options:

-   `-s`: List of sample names. (Default: T1,T2,...)
-   `-p`: Prefix for output file. (Default: MotsiEpiResults)
-   `--norm_type`:  Normalization type. {no_norm,agmn,spmr} (Default: agmn)
-   `--file_type`: File type for input files. {bw,bedg,bam}  (Default: bw)



### mtiEpiHiC

Under development